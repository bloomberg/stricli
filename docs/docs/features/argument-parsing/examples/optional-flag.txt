/// impl.ts
type Flags = {
  limit?: number;
};

export default async function({ limit }: Flags) {
  console.log(limit ? `Set limit to ${limit}` : "No limit");
}
/// spec.ts
import { buildCommand, numberParser } from "@stricli/core";

interface Flags {
  limit?: number;
}

export default buildCommand({
  loader: () => import("./impl"),
  parameters: {
    flags: {
      limit: {
        kind: "parsed",
        parse: numberParser,
        brief: "Upper limit on number of items",
        optional: true,
      },
    },
  },
  docs: {
    brief: "Example for live playground with optional flag",
    customUsage: [
      "",
      "--limit 1000",
    ],
  },
});
/// !app.ts
import { buildApplication } from "@stricli/core";
import root from "./spec.ts";
export default buildApplication(root, { name: "run" });
