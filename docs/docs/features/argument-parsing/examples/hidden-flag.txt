--help
/// impl.ts
import type { CommandContext } from "@stricli/core";

type Flags = {
  visible?: boolean;
  hidden?: boolean;
};

export default async function(this: CommandContext, { visible, hidden }: Flags) {
  this.process.stdout.write(visible ? "Visible flag active" : "Visible flag inactive");
  if (hidden) {
    this.process.stdout.write("Hidden flag active");
  }
}
/// spec.ts
import { buildCommand, type CommandContext } from "@stricli/core";

export default buildCommand({
  loader: () => import("./impl"),
  parameters: {
    flags: {
      visible: {
        kind: "boolean",
        brief: "Visible flag",
        optional: true,
      },
      hidden: {
        kind: "boolean",
        brief: "Hidden flag",
        optional: true,
        hidden: true,
      },
    },
  },
  docs: {
    brief: "Example for live playground with hidden flag"
  },
});
/// !app.ts
import { buildApplication } from "@stricli/core";
import root from "./spec.ts";
export default buildApplication(root, { name: "run" });